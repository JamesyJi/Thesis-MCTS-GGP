#include "strategy.h"
#include <cmath>

namespace Strategy
{
const std::size_t MAX_TURNS = 43;

const int TURN_DEPTH_A[MAX_TURNS] = {
    0,
    3,
    5,
    8,
    8,
    10,
    10,
    10,
    10,
    8,
    5,
    3,
    3,
    3,
    0,
    3,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnA<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_A[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_B[MAX_TURNS] = {
    0,
    2,
    5,
    7,
    7,
    9,
    9,
    9,
    9,
    7,
    5,
    2,
    2,
    2,
    0,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnB<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_B[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_C[MAX_TURNS] = {
    0,
    2,
    4,
    6,
    6,
    8,
    8,
    8,
    8,
    6,
    4,
    2,
    2,
    2,
    0,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnC<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_C[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_D[MAX_TURNS] = {
    0,
    2,
    4,
    5,
    5,
    7,
    7,
    7,
    7,
    5,
    4,
    2,
    2,
    2,
    0,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnD<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_D[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_E[MAX_TURNS] = {
    0,
    2,
    3,
    5,
    5,
    6,
    6,
    6,
    6,
    5,
    3,
    2,
    2,
    2,
    0,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnE<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_E[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_F[MAX_TURNS] = {
    0,
    1,
    3,
    4,
    4,
    5,
    5,
    5,
    5,
    4,
    3,
    1,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnF<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_F[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_G[MAX_TURNS] = {
    0,
    1,
    2,
    3,
    3,
    4,
    4,
    4,
    4,
    3,
    2,
    1,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnG<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_G[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_H[MAX_TURNS] = {
    0,
    1,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    2,
    2,
    1,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnH<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_H[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_I[MAX_TURNS] = {
    0,
    1,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    1,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnI<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_I[static_cast<int>(std::round(avgDepth))];
}

const int TURN_DEPTH_J[MAX_TURNS] = {
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

template <>
int DepthFromTurnJ<Connect4::Connect4State>(double avgDepth)
{
    return TURN_DEPTH_J[static_cast<int>(std::round(avgDepth))];
}

}